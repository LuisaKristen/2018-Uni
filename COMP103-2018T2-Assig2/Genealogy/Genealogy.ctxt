#BlueJ class context
comment0.target=Genealogy
comment0.text=\ Genealogy\:\n\ Prints\ out\ information\ from\ a\ genealogical\ database\n
comment1.params=
comment1.target=Genealogy()
comment1.text=\n\ Constructor\n
comment10.params=childName\ parentName
comment10.target=boolean\ isItValidChild(java.lang.String,\ java.lang.String)
comment10.text=\n\ Returns\ true\ if\ one\ of\ the\ parents\ is\ the\ selected\ name.\n
comment11.params=
comment11.target=void\ printChildren()
comment11.text=\n\ Print\ the\ number\ of\ children\ of\ the\ selectedName\ and\ their\ names\ (if\ any)\n\ Find\ the\ children\ by\ searching\ the\ database\ for\ people\ with\n\ selectedName\ as\ a\ parent.\n\ Hint\:\ Use\ the\ findChildren\ method\ (which\ is\ needed\ for\ other\ methods\ also)\n
comment12.params=name
comment12.target=java.util.Set\ findChildren(java.lang.String)
comment12.text=\n\ Find\ (and\ return)\ the\ set\ of\ all\ the\ names\ of\ the\ children\ of\n\ the\ given\ person\ by\ searching\ the\ database\ for\ every\ person\ \n\ who\ has\ a\ mother\ or\ father\ equal\ to\ the\ person's\ name.\n\ If\ there\ are\ no\ children,\ then\ return\ an\ empty\ Set\n
comment13.params=
comment13.target=void\ fixDatabase()
comment13.text=\n\ When\ the\ database\ is\ first\ loaded,\ none\ of\ the\ Persons\ will\n\ have\ any\ children\ recorded\ in\ their\ children\ field.\ \n\ Fix\ the\ database\ so\ every\ Person's\ children\ includes\ all\ the\n\ people\ that\ have\ that\ Person\ as\ a\ parent.\n\ Hint\:\ use\ the\ findChildren\ method\n
comment14.params=
comment14.target=void\ printGrandChildren()
comment14.text=\n\ Print\ out\ all\ the\ grandchildren\ of\ the\ selectedName\ (if\ any)\n\ Assume\ that\ the\ database\ has\ been\ "fixed"\ so\ that\ every\ Person\n\ contains\ a\ set\ of\ all\ their\ children.\n\ If\ the\ selectedName\ is\ not\ in\ the\ database,\ print\ "...\ is\ not\ known"\n
comment15.params=
comment15.target=void\ printMissing()
comment15.text=\n\ Print\ out\ all\ the\ names\ that\ are\ in\ the\ database\ but\ for\ which\n\ there\ is\ no\ Person\ in\ the\ database.\ Do\ not\ print\ any\ name\ twice.\n\ These\ will\ be\ names\ of\ parents\ or\ children\ of\ Persons\ in\ the\ Database\n\ for\ which\ a\ Person\ object\ has\ not\ been\ created.\n
comment16.params=
comment16.target=void\ youngerThanParents()
comment16.text=\n\ Checks\ that\ no\ child\ is\ older\ than\ their\ parent\n
comment17.params=
comment17.target=void\ checkParentsAges()
comment17.text=\n\ Checks\ that\ the\ Parents\ of\ each\ person\ are\ not\ more\ than\ 90\ years\ apart.\n
comment18.params=
comment18.target=void\ checkOwnAncestor()
comment18.text=\n\ Checks\ if\ anyone\ is\ their\ own\ ancestor\n
comment19.params=
comment19.target=void\ checkDataset()
comment19.text=\n\ Checks\ the\ database\ for\ inconsistencies\n
comment2.params=
comment2.target=void\ setupGUI()
comment2.text=\n\ Buttons\ and\ text\ field\ for\ operations.\n
comment20.params=
comment20.target=void\ ancestorTree()
comment20.text=\n\ Prints\ out\ the\ tree\ of\ ancestors.\ \n\ One\ Generation\ at\ a\ time\n
comment21.params=
comment21.target=void\ printDescendants()
comment21.text=\n\ Prints\ the\ children\ (and\ childrens\ children\ etc)\ of\ the\ selected\ person\n\ Database\ has\ to\ be\ fixed.\n\ Prints\ one\ generation\ at\ a\ time.\n
comment22.params=s
comment22.target=java.lang.String\ capitalise(java.lang.String)
comment22.text=\n\ Return\ a\ capitalised\ version\ of\ a\ string\n
comment23.params=args
comment23.target=void\ main(java.lang.String[])
comment3.params=
comment3.target=void\ loadData()
comment3.text=\ \n\ \ Load\ the\ information\ from\ the\ file\ "database.txt".\n\ \ \ \ \ \ \ \ Each\ line\ of\ the\ file\ has\ information\ about\ one\ person\:\n\ \ \ \ \ \ \ \ name,\ year\ of\ birth,\ mother's\ name,\ father's\ name\n\ \ \ \ \ \ \ \ (note\:\ a\ '-'\ instead\ of\ a\ name\ means\ \ the\ mother\ or\ father\ are\ unknown)\n\ \ \ \ \ \ \ \ For\ each\ line,\n\ \ \ \ \ \ \ \ \ -\ construct\ a\ new\ Person\ with\ the\ information,\ and\n\ \ \ -\ add\ to\ the\ database\ map.\n
comment4.params=
comment4.target=void\ printAllNames()
comment4.text=Prints\ out\ names\ of\ all\ the\ people\ in\ the\ database
comment5.params=
comment5.target=void\ printAllDetails()
comment5.text=Prints\ out\ details\ of\ all\ the\ people\ in\ the\ database
comment6.params=value
comment6.target=void\ selectPerson(java.lang.String)
comment6.text=\n\ Store\ value\ (capitalised\ properly)\ in\ the\ selectedName\ field.\n\ If\ there\ is\ a\ person\ with\ that\ name\ currently\ in\ people,\n\ \ then\ print\ out\ the\ details\ of\ that\ person,\n\ Otherwise,\ offer\ to\ add\ the\ person\:\n\ If\ the\ user\ wants\ to\ add\ the\ person,\n\ \ ask\ for\ year\ of\ birth,\ mother,\ and\ father\n\ \ create\ the\ new\ Person,\n\ \ add\ to\ the\ database,\ and\n\ \ print\ out\ the\ details\ of\ the\ person.\n\ Hint\:\ it\ may\ be\ useful\ to\ make\ an\ askPerson(String\ name)\ method\n\ Hint\:\ remember\ to\ capitalise\ the\ names\ that\ you\ read\ from\ the\ user\n
comment7.params=name
comment7.target=Person\ askPerson(java.lang.String)
comment7.text=\n\ Creates\ and\ returns\ the\ new\ person\ to\ add\ to\ the\ database.\n
comment8.params=
comment8.target=void\ printParentDetails()
comment8.text=\n\ Print\ all\ the\ details\ of\ the\ mother\ and\ father\ of\ the\ person\n\ with\ selectedName\ (if\ there\ is\ one).\n\ (If\ there\ is\ no\ person\ with\ the\ current\ name,\ print\ "no\ person\ called\ ...")\n\ If\ the\ mother\ or\ father's\ names\ are\ unknown,\ print\ "unknown".\n\ If\ the\ mother\ or\ father\ names\ are\ known\ but\ they\ are\ not\ in\n\ \ the\ database,\ print\ "...\:\ No\ details\ known".\n
comment9.params=
comment9.target=void\ addChild()
comment9.text=\n\ Add\ a\ child\ to\ the\ person\ with\ selectedName\ (if\ there\ is\ one).\n\ If\ there\ is\ no\ person\ with\ the\ selectedName,\n\ \ \ print\ "no\ person\ called\ ..."\ and\ return\n\ Ask\ for\ the\ name\ of\ a\ child\ of\ the\ selectedName\n\ \ (remember\ to\ capitalise\ the\ child's\ name)\n\ If\ the\ child\ is\ already\ recorded\ as\ a\ child\ of\ the\ person,\n\ \ print\ a\ message\n\ Otherwise,\ add\ the\ child's\ name\ to\ the\ current\ person.\n\ If\ the\ child's\ name\ is\ not\ in\ the\ current\ database,\n\ \ \ offer\ to\ add\ the\ child's\ details\ to\ the\ current\ database.\n\ \ \ Check\ that\ the\ selectedName\ is\ either\ the\ mother\ or\ the\ father.\n
numComments=24
